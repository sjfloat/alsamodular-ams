# Makefile.in generated by automake 1.7.3 from Makefile.am.
# plugins/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/ams
pkglibdir = $(libdir)/ams
pkgincludedir = $(includedir)/ams
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = i686-pc-linux-gnu
ACLOCAL = ${SHELL} /home/lukas/src/ams-cvs/ams/missing --run aclocal-1.7 -I m4
ALSA_CFLAGS = 
ALSA_LIBS =  -lasound -lm -ldl
AMDEP_FALSE = #
AMDEP_TRUE = 
AMSCXXFLAGS = -g -Wall -W -D_GNU_SOURCE -D_REENTRANT -DQT_CLEAN_NAMESPACE -DQT_NO_COMPAT -DQT_NO_ASCII_CAST -I$(top_srcdir) -I$(top_srcdir)/widgets $(QT_CFLAGS)
AMTAR = ${SHELL} /home/lukas/src/ams-cvs/ams/missing --run tar
AUDIO_FALSE = #
AUDIO_TRUE = 
AUTOCONF = ${SHELL} /home/lukas/src/ams-cvs/ams/missing --run autoconf
AUTOHEADER = ${SHELL} /home/lukas/src/ams-cvs/ams/missing --run autoheader
AUTOMAKE = ${SHELL} /home/lukas/src/ams-cvs/ams/missing --run automake-1.7
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOT = /usr/bin/dot
DOTPATH = /usr/bin
DOXYGEN = /usr/bin/doxygen
DOXYGEN_TREEVIEW = YES
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
HAVEDOT = YES
HAVE_LADCCA_FALSE = 
HAVE_LADCCA_TRUE = #
INSIDE_GNOME_COMMON_FALSE = 
INSIDE_GNOME_COMMON_TRUE = #
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
JACK_CFLAGS =  
JACK_FALSE = #
JACK_LIBS = -ljack -lpthread -ldl -lrt  
JACK_TRUE = 
LADCCA_CFLAGS = 
LADCCA_LIBS = 
LDFLAGS = 
LIBOBJS = 
LIBS = -lasound -lm -ldl -lqt-mt
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /home/lukas/src/ams-cvs/ams/missing --run makeinfo
MOC = moc
OBJEXT = o
PACKAGE = ams
PACKAGE_BUGREPORT = 
PACKAGE_NAME = Ams
PACKAGE_STRING = Ams 2.0.0pre1
PACKAGE_TARNAME = ams
PACKAGE_VERSION = 2.0.0pre1
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
QT_CFLAGS = -I/usr/include/qt
QT_LIBS = -lqt-mt
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
SNDFILE_CFLAGS =  
SNDFILE_LIBS = -lsndfile  
STRIP = strip
UIC = uic
VERSION = 2.0.0pre1
X_CFLAGS =  -I/usr/X11R6/include
X_EXTRA_LIBS = 
X_LIBS =  -L/usr/X11R6/lib
X_PRE_LIBS =  -lSM -lICE
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = 
am__fastdepCC_TRUE = #
am__fastdepCXX_FALSE = 
am__fastdepCXX_TRUE = #
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/lukas/src/ams-cvs/ams/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
INCLUDES = $(MUSECXXFLAGS)

UIFILES = $(wildcard *.ui)

MOCFILES = $(shell for h in $(filter %.h,$(SOURCES)); do \
		     if grep -q Q_OBJECT $$h; then \
		       echo $$h | sed "s/\(.*\)\.h/moc_\1.cpp/"; \
		     fi; \
		   done)


BUILT_SOURCES = $(MOCFILES) $(UIFILES:%.ui=%.h)

MOSTLYCLEANFILES = $(MOCFILES) $(UIFILES:%.ui=%.h)

SUFFIXES = .ui

#this is common to all plugins
noinst_LTLIBRARIES = plugin.la

lib_LTLIBRARIES = testplugin.la

plugin_la_SOURCES = plugin.h plugin.cpp
plugin_la_CXXFLAGS = $(CXXFLAGS) -rdynamic
plugin_la_LDFLAGS = -module

testplugin_la_SOURCES = testplugin.h testplugin.cpp moc_testplugin.cpp
testplugin_la_CXXFLAGS = $(QT_CFLAGS) $(CXXFLAGS) -rdynamic
testplugin_la_LIBADD = plugin.la 
testplugin_la_LDFLAGS = -shared -module $(QT_LIBS)
testplugin_la_DEPENDENCIES = $(top_srcdir)/interfaces/subject.h $(top_srcdir)/interfaces/observer.h plugin.la
subdir = plugins
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)

plugin_la_LIBADD =
am_plugin_la_OBJECTS = plugin_la-plugin.lo
plugin_la_OBJECTS = $(am_plugin_la_OBJECTS)
am_testplugin_la_OBJECTS = testplugin_la-testplugin.lo \
	testplugin_la-moc_testplugin.lo
testplugin_la_OBJECTS = $(am_testplugin_la_OBJECTS)

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/plugin_la-plugin.Plo \
	./$(DEPDIR)/testplugin_la-moc_testplugin.Plo \
	./$(DEPDIR)/testplugin_la-testplugin.Plo
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(plugin_la_SOURCES) $(testplugin_la_SOURCES)
DIST_COMMON = $(top_srcdir)/common.am Makefile.am Makefile.in
SOURCES = $(plugin_la_SOURCES) $(testplugin_la_SOURCES)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .ui .cpp .lo .o .obj
$(srcdir)/Makefile.in: # Makefile.am $(top_srcdir)/common.am $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  plugins/Makefile
Makefile: # $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
libLTLIBRARIES_INSTALL = $(INSTALL)
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
plugin.la: $(plugin_la_OBJECTS) $(plugin_la_DEPENDENCIES) 
	$(CXXLINK)  $(plugin_la_LDFLAGS) $(plugin_la_OBJECTS) $(plugin_la_LIBADD) $(LIBS)
testplugin.la: $(testplugin_la_OBJECTS) $(testplugin_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(testplugin_la_LDFLAGS) $(testplugin_la_OBJECTS) $(testplugin_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/plugin_la-plugin.Plo
include ./$(DEPDIR)/testplugin_la-moc_testplugin.Plo
include ./$(DEPDIR)/testplugin_la-testplugin.Plo

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
#	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
#	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
#	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
#	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
#	fi
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
#	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
#	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
#	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
#	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
#	fi
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.cpp.lo:
#	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
#	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
#	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
#	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
#	fi
	source='$<' object='$@' libtool=yes \
	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
	$(CXXDEPMODE) $(depcomp) \
	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

plugin_la-plugin.o: plugin.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(plugin_la_CXXFLAGS) $(CXXFLAGS) -MT plugin_la-plugin.o -MD -MP -MF "$(DEPDIR)/plugin_la-plugin.Tpo" \
#	  -c -o plugin_la-plugin.o `test -f 'plugin.cpp' || echo '$(srcdir)/'`plugin.cpp; \
#	then mv "$(DEPDIR)/plugin_la-plugin.Tpo" "$(DEPDIR)/plugin_la-plugin.Po"; \
#	else rm -f "$(DEPDIR)/plugin_la-plugin.Tpo"; exit 1; \
#	fi
	source='plugin.cpp' object='plugin_la-plugin.o' libtool=no \
	depfile='$(DEPDIR)/plugin_la-plugin.Po' tmpdepfile='$(DEPDIR)/plugin_la-plugin.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o plugin_la-plugin.o `test -f 'plugin.cpp' || echo '$(srcdir)/'`plugin.cpp

plugin_la-plugin.obj: plugin.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(plugin_la_CXXFLAGS) $(CXXFLAGS) -MT plugin_la-plugin.obj -MD -MP -MF "$(DEPDIR)/plugin_la-plugin.Tpo" \
#	  -c -o plugin_la-plugin.obj `if test -f 'plugin.cpp'; then $(CYGPATH_W) 'plugin.cpp'; else $(CYGPATH_W) '$(srcdir)/plugin.cpp'; fi`; \
#	then mv "$(DEPDIR)/plugin_la-plugin.Tpo" "$(DEPDIR)/plugin_la-plugin.Po"; \
#	else rm -f "$(DEPDIR)/plugin_la-plugin.Tpo"; exit 1; \
#	fi
	source='plugin.cpp' object='plugin_la-plugin.obj' libtool=no \
	depfile='$(DEPDIR)/plugin_la-plugin.Po' tmpdepfile='$(DEPDIR)/plugin_la-plugin.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o plugin_la-plugin.obj `if test -f 'plugin.cpp'; then $(CYGPATH_W) 'plugin.cpp'; else $(CYGPATH_W) '$(srcdir)/plugin.cpp'; fi`

plugin_la-plugin.lo: plugin.cpp
#	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(plugin_la_CXXFLAGS) $(CXXFLAGS) -MT plugin_la-plugin.lo -MD -MP -MF "$(DEPDIR)/plugin_la-plugin.Tpo" \
#	  -c -o plugin_la-plugin.lo `test -f 'plugin.cpp' || echo '$(srcdir)/'`plugin.cpp; \
#	then mv "$(DEPDIR)/plugin_la-plugin.Tpo" "$(DEPDIR)/plugin_la-plugin.Plo"; \
#	else rm -f "$(DEPDIR)/plugin_la-plugin.Tpo"; exit 1; \
#	fi
	source='plugin.cpp' object='plugin_la-plugin.lo' libtool=yes \
	depfile='$(DEPDIR)/plugin_la-plugin.Plo' tmpdepfile='$(DEPDIR)/plugin_la-plugin.TPlo' \
	$(CXXDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(plugin_la_CXXFLAGS) $(CXXFLAGS) -c -o plugin_la-plugin.lo `test -f 'plugin.cpp' || echo '$(srcdir)/'`plugin.cpp

testplugin_la-testplugin.o: testplugin.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testplugin_la_CXXFLAGS) $(CXXFLAGS) -MT testplugin_la-testplugin.o -MD -MP -MF "$(DEPDIR)/testplugin_la-testplugin.Tpo" \
#	  -c -o testplugin_la-testplugin.o `test -f 'testplugin.cpp' || echo '$(srcdir)/'`testplugin.cpp; \
#	then mv "$(DEPDIR)/testplugin_la-testplugin.Tpo" "$(DEPDIR)/testplugin_la-testplugin.Po"; \
#	else rm -f "$(DEPDIR)/testplugin_la-testplugin.Tpo"; exit 1; \
#	fi
	source='testplugin.cpp' object='testplugin_la-testplugin.o' libtool=no \
	depfile='$(DEPDIR)/testplugin_la-testplugin.Po' tmpdepfile='$(DEPDIR)/testplugin_la-testplugin.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testplugin_la_CXXFLAGS) $(CXXFLAGS) -c -o testplugin_la-testplugin.o `test -f 'testplugin.cpp' || echo '$(srcdir)/'`testplugin.cpp

testplugin_la-testplugin.obj: testplugin.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testplugin_la_CXXFLAGS) $(CXXFLAGS) -MT testplugin_la-testplugin.obj -MD -MP -MF "$(DEPDIR)/testplugin_la-testplugin.Tpo" \
#	  -c -o testplugin_la-testplugin.obj `if test -f 'testplugin.cpp'; then $(CYGPATH_W) 'testplugin.cpp'; else $(CYGPATH_W) '$(srcdir)/testplugin.cpp'; fi`; \
#	then mv "$(DEPDIR)/testplugin_la-testplugin.Tpo" "$(DEPDIR)/testplugin_la-testplugin.Po"; \
#	else rm -f "$(DEPDIR)/testplugin_la-testplugin.Tpo"; exit 1; \
#	fi
	source='testplugin.cpp' object='testplugin_la-testplugin.obj' libtool=no \
	depfile='$(DEPDIR)/testplugin_la-testplugin.Po' tmpdepfile='$(DEPDIR)/testplugin_la-testplugin.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testplugin_la_CXXFLAGS) $(CXXFLAGS) -c -o testplugin_la-testplugin.obj `if test -f 'testplugin.cpp'; then $(CYGPATH_W) 'testplugin.cpp'; else $(CYGPATH_W) '$(srcdir)/testplugin.cpp'; fi`

testplugin_la-testplugin.lo: testplugin.cpp
#	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testplugin_la_CXXFLAGS) $(CXXFLAGS) -MT testplugin_la-testplugin.lo -MD -MP -MF "$(DEPDIR)/testplugin_la-testplugin.Tpo" \
#	  -c -o testplugin_la-testplugin.lo `test -f 'testplugin.cpp' || echo '$(srcdir)/'`testplugin.cpp; \
#	then mv "$(DEPDIR)/testplugin_la-testplugin.Tpo" "$(DEPDIR)/testplugin_la-testplugin.Plo"; \
#	else rm -f "$(DEPDIR)/testplugin_la-testplugin.Tpo"; exit 1; \
#	fi
	source='testplugin.cpp' object='testplugin_la-testplugin.lo' libtool=yes \
	depfile='$(DEPDIR)/testplugin_la-testplugin.Plo' tmpdepfile='$(DEPDIR)/testplugin_la-testplugin.TPlo' \
	$(CXXDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testplugin_la_CXXFLAGS) $(CXXFLAGS) -c -o testplugin_la-testplugin.lo `test -f 'testplugin.cpp' || echo '$(srcdir)/'`testplugin.cpp

testplugin_la-moc_testplugin.o: moc_testplugin.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testplugin_la_CXXFLAGS) $(CXXFLAGS) -MT testplugin_la-moc_testplugin.o -MD -MP -MF "$(DEPDIR)/testplugin_la-moc_testplugin.Tpo" \
#	  -c -o testplugin_la-moc_testplugin.o `test -f 'moc_testplugin.cpp' || echo '$(srcdir)/'`moc_testplugin.cpp; \
#	then mv "$(DEPDIR)/testplugin_la-moc_testplugin.Tpo" "$(DEPDIR)/testplugin_la-moc_testplugin.Po"; \
#	else rm -f "$(DEPDIR)/testplugin_la-moc_testplugin.Tpo"; exit 1; \
#	fi
	source='moc_testplugin.cpp' object='testplugin_la-moc_testplugin.o' libtool=no \
	depfile='$(DEPDIR)/testplugin_la-moc_testplugin.Po' tmpdepfile='$(DEPDIR)/testplugin_la-moc_testplugin.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testplugin_la_CXXFLAGS) $(CXXFLAGS) -c -o testplugin_la-moc_testplugin.o `test -f 'moc_testplugin.cpp' || echo '$(srcdir)/'`moc_testplugin.cpp

testplugin_la-moc_testplugin.obj: moc_testplugin.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testplugin_la_CXXFLAGS) $(CXXFLAGS) -MT testplugin_la-moc_testplugin.obj -MD -MP -MF "$(DEPDIR)/testplugin_la-moc_testplugin.Tpo" \
#	  -c -o testplugin_la-moc_testplugin.obj `if test -f 'moc_testplugin.cpp'; then $(CYGPATH_W) 'moc_testplugin.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_testplugin.cpp'; fi`; \
#	then mv "$(DEPDIR)/testplugin_la-moc_testplugin.Tpo" "$(DEPDIR)/testplugin_la-moc_testplugin.Po"; \
#	else rm -f "$(DEPDIR)/testplugin_la-moc_testplugin.Tpo"; exit 1; \
#	fi
	source='moc_testplugin.cpp' object='testplugin_la-moc_testplugin.obj' libtool=no \
	depfile='$(DEPDIR)/testplugin_la-moc_testplugin.Po' tmpdepfile='$(DEPDIR)/testplugin_la-moc_testplugin.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testplugin_la_CXXFLAGS) $(CXXFLAGS) -c -o testplugin_la-moc_testplugin.obj `if test -f 'moc_testplugin.cpp'; then $(CYGPATH_W) 'moc_testplugin.cpp'; else $(CYGPATH_W) '$(srcdir)/moc_testplugin.cpp'; fi`

testplugin_la-moc_testplugin.lo: moc_testplugin.cpp
#	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testplugin_la_CXXFLAGS) $(CXXFLAGS) -MT testplugin_la-moc_testplugin.lo -MD -MP -MF "$(DEPDIR)/testplugin_la-moc_testplugin.Tpo" \
#	  -c -o testplugin_la-moc_testplugin.lo `test -f 'moc_testplugin.cpp' || echo '$(srcdir)/'`moc_testplugin.cpp; \
#	then mv "$(DEPDIR)/testplugin_la-moc_testplugin.Tpo" "$(DEPDIR)/testplugin_la-moc_testplugin.Plo"; \
#	else rm -f "$(DEPDIR)/testplugin_la-moc_testplugin.Tpo"; exit 1; \
#	fi
	source='moc_testplugin.cpp' object='testplugin_la-moc_testplugin.lo' libtool=yes \
	depfile='$(DEPDIR)/testplugin_la-moc_testplugin.Plo' tmpdepfile='$(DEPDIR)/testplugin_la-moc_testplugin.TPlo' \
	$(CXXDEPMODE) $(depcomp) \
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(testplugin_la_CXXFLAGS) $(CXXFLAGS) -c -o testplugin_la-moc_testplugin.lo `test -f 'moc_testplugin.cpp' || echo '$(srcdir)/'`moc_testplugin.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	$(mkinstalldirs) $(distdir)/..
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-noinstLTLIBRARIES \
	ctags distclean distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-libLTLIBRARIES install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool pdf \
	pdf-am ps ps-am tags uninstall uninstall-am uninstall-info-am \
	uninstall-libLTLIBRARIES


de:
	@for base in $(MOCFILES); do echo -e "\t$${base}.cpp $${base}.h \\"; done

nde:
	@for base in $(MOCFILES); do echo -e "\tmoc_$${base}.cpp \\"; done

.ui.o: %.h
	$(UIC) -o $*.cpp -impl $*.h $*.ui
	$(MOC) $*.h -o moc_$*.cpp
	$(CXXCOMPILE) -c $*.cpp -o base_$*.o
	$(CXXCOMPILE) -c moc_$*.cpp -o moc_$*.o
	$(CXXLINK) -r base_$*.o moc_$*.o -o $*.o
	$(RM) $*.cpp moc_$*.cpp base_$*.o moc_$*.o

.ui.lo: %.h
	$(UIC) -o $*.cpp -impl $*.h $*.ui
	$(MOC) $*.h -o moc_$*.cpp
	$(LTCXXCOMPILE) -c $*.cpp -o base_$*.lo
	$(LTCXXCOMPILE) -c moc_$*.cpp -o moc_$*.lo
	$(CXXLINK) -r base_$*.lo moc_$*.lo -o $*.lo
	$(RM) $*.cpp moc_$*.cpp base_$*.lo moc_$*.lo base_$*.o moc_$*.o

moc_%.cpp: %.h
	$(MOC) $< -o $@

%.h: %.ui
	$(UIC) -o $@ $<
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
